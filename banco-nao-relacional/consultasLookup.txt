####################################################
# Busca Bradesco e estado de SP

db.empresas.aggregate([
    {$match: {nome: "Bradesco"}},
    {$lookup: {
        from: "estados",
        localField: "estadoId",
        foreignField: "_id",
        as: "estado"
    }},
    {$unwind: "$estado"},
]).pretty()

####################################################

# retorna dados do Bradesco
db.empresas.aggregate([
  {$match: {nome: "Bradesco"}}  
]).pretty()
    {
        "_id" : ObjectId("5c9d38d15a0ab8ad7b1845e5"),
        "nome" : "Bradesco",
        "estadoId" : ObjectId("5c9d1e4e5a0ab8ad7b1845df")
    }
####################################################
# exibe o _id, nome e estadoId
# em lookup: relaciona da collection estados o campo local de empresas estadoId
# com o campo estrangeiro _id da collection estados, criando o atributo estado (as)
db.empresas.aggregate([
  {$match: {nome: "Bradesco"}},
  {$lookup: {
      from: "estados",
      localField: "estadoId",
      foreignField: "_id",
      as: "estado"
  }},
]).pretty()

    {
        "_id" : ObjectId("5c9d38d15a0ab8ad7b1845e5"),
        "nome" : "Bradesco",
        "estadoId" : ObjectId("5c9d1e4e5a0ab8ad7b1845df"),
        "estado" : [
            {
                "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845df"),
                "nome" : "São Paulo",
                "sigla" : "SP",
                "regiao" : "Sudeste",
                "cidades" : [
                    {
                        "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845dc"),
                        "nome" : "Campinas",
                        "area" : 795.7,
                        "prefeito" : "Jonas Donizette",
                        "populacao" : 1081000
                    },
                    {
                        "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845dd"),
                        "nome" : "Garulhos",
                        "populacao" : 1325000
                    },
                    {
                        "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845de"),
                        "nome" : "Sorocaba",
                        "distanciaCapital" : 87,
                        "populacao" : 644919
                    },
                    {
                        "nome" : "Santos",
                        "populacao" : 433966
                    }
                ],
                "populacao" : 45340000
            }
        ]
    }

####################################################

# aplicando $unwind o atributo estado deixa de ser um array
db.empresas.aggregate([
  {$match: {nome: "Bradesco"}},
  {$lookup: {
      from: "estados",
      localField: "estadoId",
      foreignField: "_id",
      as: "estado"
  }},
  {$unwind: "$estado"},
]).pretty()

    {
        "_id" : ObjectId("5c9d38d15a0ab8ad7b1845e5"),
        "nome" : "Bradesco",
        "estadoId" : ObjectId("5c9d1e4e5a0ab8ad7b1845df"),
        "estado" : {
            "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845df"),
            "nome" : "São Paulo",
            "sigla" : "SP",
            "regiao" : "Sudeste",
            "cidades" : [
                {
                    "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845dc"),
                    "nome" : "Campinas",
                    "area" : 795.7,
                    "prefeito" : "Jonas Donizette",
                    "populacao" : 1081000
                },
                {
                    "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845dd"),
                    "nome" : "Garulhos",
                    "populacao" : 1325000
                },
                {
                    "_id" : ObjectId("5c9d1e4e5a0ab8ad7b1845de"),
                    "nome" : "Sorocaba",
                    "distanciaCapital" : 87,
                    "populacao" : 644919
                },
                {
                    "nome" : "Santos",
                    "populacao" : 433966
                }
            ],
            "populacao" : 45340000
        }
    }


####################################################
# Busca Vale e cidade de Sorocaba



####################################################
# retorna dados da Vale

db.empresas.aggregate([
    {$match: {nome: "Vale"}},
]).pretty()
    {
        "_id" : ObjectId("5c9d3a685a0ab8ad7b1845e6"),
        "nome" : "Vale",
        "cidadeId" : ObjectId("5c9d1e4e5a0ab8ad7b1845de")
    }

####################################################

db.empresas.aggregate([
    {$match: {nome: "Vale"}},
    {$lookup: {
        from: "estados",
        localField: "cidadeId",
        foreignField: "cidades._id",
        as: "estado"
    }},
    {$unwind: "$estado"},
    {$unwind: "$estado.cidades"},
    {$addFields: { mesmaCidade: {$cmp: ["estado.cidades._id", "$cidadeId"]} }},
    {$match: { mesmaCidade: 0 }},
]).pretty()


# https://docs.mongodb.com/manual/reference/operator/aggregation/cmp/
# OPERATOR COMPARE $cmp 
#    -1 if the first value is less than the second.
#    1 if the first value is greater than the second.
#    0 if the two values are equivalent.

{ $match: {"estado.cidades._id": "$cidadeId"} },